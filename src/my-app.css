@tailwind base;
@tailwind components;
@tailwind utilities;
/* @tailwind "animate.css/animate";  */

/* color: #007bff;
text-decoration: none;
background-color: white; */

/* .a {
  color:whte;
 
}

.navbar-nav li.loader {
  color: #FFF;
  
  margin: 12px 24px 0 6px;
}

a:hover {
  color: #9feb48;
  text-decoration: underline;
} */
.btn {
  @apply text-base font-medium rounded-lg p-3;
}

.btn--primary {
  @apply bg-blue-500 text-white;
}

.btn--secondary {
  @apply bg-gray-100 text-black;
}

.btn--info {
  @apply bg-purple-300 text-white;
}
.btn--default {
  @apply bg-fuchsia-600 text-white;
}
/* color, font, text, 100% width, etc. */
/* Use opacity to achieve the fade-in/out effect. */

/* @tailwind "animate.css/animate";  <div class="animate__animated animate__bounce">The div</div> */
@keyframes changeText {
  0% {
    opacity: 1;
  }
  25% {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  75% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}



* {
  box-sizing: border-box;
}

/* .item {
  width: 200px;
  height: 200px;
  margin: 50px auto;
  padding-top: 75px;
  background: #ccc;
  text-align: center;
  color: #FFF;
  font-size: 3em;
} */
/* color, font, text, 100% width, etc. */



.spin {
  /* background-color: #0f2c3e; */
  background-color: blueviolet;
  @apply flex w-full self-center relative;
  @apply font-sans text-base text-white text-center;
}

.subheading {
  /* background-color: #0f2c3e; */
  background-color: blueviolet;
  @apply flex w-full self-center relative;
  @apply font-sans text-base text-white text-center;
}

.subheadingblack {
  /* background-color: #0f2c3e; */
  z-index: 1;
  background-color: black;
  @apply flex w-full self-center relative;
  @apply font-sans text-base text-white text-center;
}
/* position: relative is required to keep spans with position: absolute inside .subheading */
/* make each span width 50% of .subheading's width */
.subheading span {
  @apply w-1/2 px-2;
}


/* this is needed to justify spans because they're being positioned absolutely */
.en.subheading {
  @apply justify-end;
}
/* overlap each .tech-adj one over the other so that each word fades in and out in its place and without displacing other spans */
.en.subheading .tech-adj:nth-child(-n + 4){
  position: absolute;
  left: 0;
}
/* hide the first 3 tech-adj */
.en.subheading .tech-adj:nth-child(-n + 3){
  opacity: 0;
}
/* Animate every .tech-adj every 8s infinitely */
.subheading .tech-adj {
  animation: changeText 8s infinite;
}
/* This is the "Beautiful" span and is the 1st to be animated after a 1 second delay */
.en.subheading .tech-adj:nth-child(4) {
  animation-delay: 1s;
}
/* This is the "Useful" span and is the 2nd to be animated after a 3 seconds delay */
.en.subheading .tech-adj:nth-child(3) {
  animation-delay: 3s;
}
/* This is the "Innovative" span and is the 3rd to be animated after a 5 seconds delay */
.en.subheading .tech-adj:nth-child(2) {
  animation-delay: 5s;
}
/* This is the Empowering" span and is the 4th to be animated after a 7 seconds delay */
.en.subheading .tech-adj:nth-child(1) {
  animation-delay: 7s;
}
container{
  display:grid;
  grid-gap:10px;
  grid-template-columns:auto fit-content(800px) auto;
  height:400px;
}

.aside{background:yellow;}
.main-content{background:red; padding:10px; color:white; font-family:arial; font-weight:bold;}


  .videoWrapper {
            position: relative;
            padding-bottom: 56.25%;
            /* 16:9 */
            height: 0;
        }

        .videoWrapper iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            /*<!-- h - height: 100vh->*/
           
        }

        .video-container {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }

        .video-container video {
            /* Make video to at least 100% wide and tall */
            min-width: 100%;
            min-height: 100%;

            /* Setting width & height to auto prevents the browser from stretching or squishing the video */
            width: auto;
            height: auto;

            /* Center the video */
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
